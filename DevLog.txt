Change(s) in alpha 0.0.46.45
    * Migrated to C# 8.0 (beta)
    + Enabled Nullable Reference Type and added null checks for some code
    + Supported record/restore display language for application
    * Re-implemented CompareTo and Equals methods for CharSet class
    * Other modifications and refactorization

Change(s) in alpha 0.0.45.20
    * Marked CanExecute method in CommonCommandBase virtual for future extension
    + Implemented Import, Delete, Submit CharSets and OpenCharSetFolder commands
    * Updated ConfigSchema
    + Added CharSetNameConverter ValueConverter
    + Implemented IComparable and ICloneable as well as re-implemented IEquatable interfaces to CharSet class 
    + Implemented synchronization of CharSetsInUse selection upon ChooseCharSet window is shown
    + Proposed related structure changes

Change(s) in alpha 0.0.44.30
    * Added 'using ASCIIsome.Properties' statements where needed, instead of fully qualifying Resources class
    * Change of CharSet file structure and correspondingly the CharSet schema
    * Multiple changes of CharSet class. See diff view for details
    + Created XML schema for config file, and correspondingly implemented config saving/loading method in ViewModel class
    * Other minor changes

Change(s) in alpha 0.0.43.15
    + Added import and delete CharSet commands (not implemented yet)
    + Assigned different color for application title in About window according to build channels: canary, RC and formal release (master)
    + Added Load and LoadDefault methods for CharSet class
    + Made a draft of configuration saving/loading feature
    + Bringing New Year's Greetings and Congratulations to everyone! 

Change(s) in alpha 0.0.42.39
    + Application now copy CharSet presets to appdata folder on first use (folder not detected)
    + Added ChooseCharSet window and open/close command

Change(s) in alpha 0.0.40.60
    + Implemented open from/save to file and import from/export to clipboard functions
    + Added status bar prompt for commands/actions
    * Moved icons and CharSet presets to Resources and associated resource files with ResX file
    * Other referential amendments

Change(s) in alpha 0.0.38.18
    - Removed Xceed-related NuGet packages for simplification of dependencies
    * Replaced IntegerUpDown control provided by Xceed with newly added user control, NumericUpDown
    + Added FxCop analyzers for solution for stricter code quality analysis
    * Completed migration of development environment to Visual Studio 2019 (Preview)
    * Separated development log (this file) with release notes (yet to write)

Change(s) in alpha 0.0.37.6
    * Re-targeted from .NET Framework 4.7 to 4.7.2

Change(s) in alpha 0.0.36.5
    + Added support for Per-Monitor DPI Awareness v2

Change(s) in alpha 0.0.35.3
    * Made the seed argument input for TextImageConverter accepts a bigger range of integer of Int64 (long) instead of Int32 (int)

Change(s) in alpha 0.0.33.29
    + Added constructor and modified some XML documentation comments for Range<T> class
    * Further member accessor modifier checking and modification for types
    * Made windows, commands and some other classes sealed for security
    * Other minor maintenance

Change(s) in alpha 0.0.32.8
    + Outlined workflow of Plotter class
    + Added PlottingStage enum for clarity
    + Adopted Range<T> class from StackOverflow

Change(s) in alpha 0.0.29.30
    * Checked all member modifiers
    * Made comment style consistent
    * Other minor refinements

Change(s) in alpha 0.0.28.27
    * Replaced Planned Modification section in change log file into TODO comments
    * Refactored type files

Change(s) in alpha 0.0.24.20
    + Created CommonCommandBase type and made all other command types inherited from CommonCommandBase

Change(s) in alpha 0.0.23.29
    + Added version prefix and suffix for ApplicationVersion and its value converter
    - Removed convert back method implementation in the value converter since ApplicationVersion is readonly
    + Added random seed offset for random in RubberDuckCommand, which is equivalent to ¿¿¿
    * Moved window resources into application resources and made data context effective on whole window
    * Extended ChatSet type, overloaded == and != operator and implemented IEquatable<CharSet> interface
    + Added WindowTop/WindowLeft props in ViewModel, which are binded to the MainWindow, so that it keeps its position on the screen after being reset after language change
    + Included readme.md into solution
    + Implemented ICloneable to ViewModel
    * Changed the behavior of ChangeLanguage and About window to modal dialog box and correspondingly changed the method implementation regarding showing/closing window(s)
    * Added [HV] prefix for all manual comment for easy searching
    * Other minor refinements
    + Added this change log

-------- 想吃蛋挞 //w// --------
