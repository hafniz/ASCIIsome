<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>关于</value>
  </data>
  <data name="AboutDetails" xml:space="preserve">
    <value>(placeholder for Chinese aboutdetails)</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="ChangeLanguage" xml:space="preserve">
    <value>选择显示语言</value>
  </data>
  <data name="DynamicGrayscaleRange" xml:space="preserve">
    <value>动态灰度范围</value>
  </data>
  <data name="ExportedToClipboard" xml:space="preserve">
    <value>文本已成功导入至剪贴板。</value>
  </data>
  <data name="ExportToClipboard" xml:space="preserve">
    <value>导出至剪贴板</value>
  </data>
  <data name="ImgHeight" xml:space="preserve">
    <value>字符画高度</value>
  </data>
  <data name="ImgWidth" xml:space="preserve">
    <value>字符画宽度</value>
  </data>
  <data name="ImportFromClipboard" xml:space="preserve">
    <value>导入自剪贴板</value>
  </data>
  <data name="InvertGrayscaleRange" xml:space="preserve">
    <value>反相灰度范围</value>
  </data>
  <data name="KeepAspectRatio" xml:space="preserve">
    <value>保持图片长宽比</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>语言</value>
  </data>
  <data name="LanguageChanged" xml:space="preserve">
    <value>语言已切换至中文。</value>
  </data>
  <data name="ChooseCharSet" xml:space="preserve">
    <value>选择字符集...</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>确定</value>
  </data>
  <data name="OpenFile" xml:space="preserve">
    <value>打开文件...</value>
  </data>
  <data name="Ready" xml:space="preserve">
    <value>就绪</value>
  </data>
  <data name="SaveAs" xml:space="preserve">
    <value>保存为...</value>
  </data>
  <data name="SavedToFile" xml:space="preserve">
    <value>文本已成功保存。</value>
  </data>
  <data name="SaveFileDialogFilter" xml:space="preserve">
    <value>文本文档 (*.txt)|*.txt|所有文件 (*.*)|*.*</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>即时视图 - ASCIIsome</value>
  </data>
  <data name="OpenFileDialogFilter" xml:space="preserve">
    <value>BMP 文件 (*.bmp)|*.bmp|JPEG 文件 (*.jpg; *.jpeg)|*.jpg; *.jpeg|JPEG XR 文件 (*.jxr)|*.jxr|PNG 文件 (*.png)|*.png|TIFF 文件 (*.tif; *.tiff)|*.tif; *.tiff|GIF 文件 (*.gif)|*.gif|图标文件 (*.ico)|*.ico|所有支持的格式 (*.bmp; *.jpg; *.jpeg; *.jxr; *.png; *.tif; *.tiff; *.gif; *.ico)|*.bmp; *.jpg; *.jpeg; *.jxr; *.png; *.tif; *.tiff; *.gif; *.ico</value>
  </data>
  <data name="ImportedFromClipboard" xml:space="preserve">
    <value>成功从剪贴板导入图像。</value>
  </data>
  <data name="InvalidFilePath" xml:space="preserve">
    <value>从剪贴板导入图像失败：剪贴板上的文字不是有效路径。</value>
  </data>
  <data name="UnsupportedType" xml:space="preserve">
    <value>从剪贴板导入图像失败：剪贴板中的文件类型不受支持。</value>
  </data>
  <data name="ImageLoaded" xml:space="preserve">
    <value>图像已加载。</value>
  </data>
  <data name="ChooseCharSetWindowTitle" xml:space="preserve">
    <value>选择字符集</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>删除</value>
  </data>
  <data name="Import" xml:space="preserve">
    <value>导入...</value>
  </data>
  <data name="DefaultCharSetLoaded" xml:space="preserve">
    <value>从上次的配置中加载字符集失败。已加载默认字符集。</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>欢迎使用 ASCIIsome！参阅“关于”窗口以了解更多信息。</value>
  </data>
  <data name="OpenCharSetFolder" xml:space="preserve">
    <value>打开字符集文件夹...</value>
  </data>
  <data name="ImportCharSetDialogFilter" xml:space="preserve">
    <value>XML 文件 (*.xml)|*.xml|所有文件 (*.*)|*.*</value>
  </data>
  <data name="EmptyCharSet" xml:space="preserve">
    <value>（空字符集）</value>
  </data>
</root>